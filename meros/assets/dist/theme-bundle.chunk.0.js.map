{"version":3,"sources":["webpack:///./assets/js/theme/common/gift-certificate-validator.js","webpack:///./assets/js/theme/gift-certificate.js"],"names":["cert","exec","GiftCertificate","$certBalanceForm","$","purchaseModel","recipientName","val","length","recipientEmail","formModel","email","senderName","senderEmail","customAmount","value","min","max","setAmount","options","found","forEach","option","$purchaseForm","$customAmounts","find","purchaseValidator","nod","submit","delay","$element","data","minFormatted","maxFormatted","add","selector","validate","cb","numberVal","Number","errorMessage","result","triggeredBy","get","checked","balanceVal","checkCertBalanceValidator","performCheck","areAll","event","preventDefault","click","modal","defaultModal","previewUrl","currentTarget","serialize","open","api","getPage","err","content","updateContent","context","previewError","wrap","$balanceForm","balanceValidator","giftCertChecker"],"mappings":"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","file":"theme-bundle.chunk.0.js","sourcesContent":["export default function (cert) {\r\n    if (typeof cert !== 'string') {\r\n        return false;\r\n    }\r\n\r\n    return /^[A-Z0-9]{3}\\-[A-Z0-9]{3}\\-[A-Z0-9]{3}\\-[A-Z0-9]{3}$/.exec(cert);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/common/gift-certificate-validator.js","import PageManager from './page-manager';\r\nimport $ from 'jquery';\r\nimport nod from './common/nod';\r\nimport giftCertChecker from './common/gift-certificate-validator';\r\nimport formModel from './common/models/forms';\r\nimport { api } from '@bigcommerce/stencil-utils';\r\nimport { defaultModal } from './global/modal';\r\n\r\nexport default class GiftCertificate extends PageManager {\r\n    constructor() {\r\n        super();\r\n\r\n        const $certBalanceForm = $('#gift-certificate-balance');\r\n\r\n        const purchaseModel = {\r\n            recipientName(val) {\r\n                return val.length;\r\n            },\r\n            recipientEmail(...args) {\r\n                return formModel.email(...args);\r\n            },\r\n            senderName(val) {\r\n                return val.length;\r\n            },\r\n            senderEmail(...args) {\r\n                return formModel.email(...args);\r\n            },\r\n            customAmount(value, min, max) {\r\n                return value && value >= min && value <= max;\r\n            },\r\n            setAmount(value, options) {\r\n                let found = false;\r\n\r\n                options.forEach((option) => {\r\n                    if (option === value) {\r\n                        found = true;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                return found;\r\n            },\r\n        };\r\n\r\n        const $purchaseForm = $('#gift-certificate-form');\r\n        const $customAmounts = $purchaseForm.find('input[name=\"certificate_amount\"]');\r\n        const purchaseValidator = nod({\r\n            submit: '#gift-certificate-form input[type=\"submit\"]',\r\n            delay: 300,\r\n        });\r\n\r\n        if ($customAmounts.length) {\r\n            const $element = $purchaseForm.find('input[name=\"certificate_amount\"]');\r\n            const min = $element.data('min');\r\n            const minFormatted = $element.data('min-formatted');\r\n            const max = $element.data('max');\r\n            const maxFormatted = $element.data('max-formatted');\r\n\r\n            purchaseValidator.add({\r\n                selector: '#gift-certificate-form input[name=\"certificate_amount\"]',\r\n                validate: (cb, val) => {\r\n                    const numberVal = Number(val);\r\n\r\n                    if (!numberVal) {\r\n                        cb(false);\r\n                    }\r\n\r\n                    cb(numberVal >= min && numberVal <= max);\r\n                },\r\n                errorMessage: `You must enter a certificate amount between ${minFormatted} and ${maxFormatted}.`,\r\n            });\r\n        }\r\n\r\n        purchaseValidator.add([\r\n            {\r\n                selector: '#gift-certificate-form input[name=\"to_name\"]',\r\n                validate: (cb, val) => {\r\n                    const result = purchaseModel.recipientName(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a valid recipient name.',\r\n            },\r\n            {\r\n                selector: '#gift-certificate-form input[name=\"to_email\"]',\r\n                validate: (cb, val) => {\r\n                    const result = purchaseModel.recipientEmail(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a valid recipient email.',\r\n            },\r\n            {\r\n                selector: '#gift-certificate-form input[name=\"from_name\"]',\r\n                validate: (cb, val) => {\r\n                    const result = purchaseModel.senderName(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter your name.',\r\n            },\r\n            {\r\n                selector: '#gift-certificate-form input[name=\"from_email\"]',\r\n                validate: (cb, val) => {\r\n                    const result = purchaseModel.senderEmail(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a valid email.',\r\n            },\r\n            {\r\n                selector: '#gift-certificate-form input[name=\"certificate_theme\"]:first-of-type',\r\n                triggeredBy: '#gift-certificate-form input[name=\"certificate_theme\"]',\r\n                validate: (cb) => {\r\n                    const val = $purchaseForm.find('input[name=\"certificate_theme\"]:checked').val();\r\n\r\n                    cb(typeof(val) === 'string');\r\n                },\r\n                errorMessage: 'You must select a gift certificate theme.',\r\n            },\r\n            {\r\n                selector: '#gift-certificate-form input[name=\"agree\"]',\r\n                validate: (cb) => {\r\n                    const val = $purchaseForm.find('input[name=\"agree\"]').get(0).checked;\r\n\r\n                    cb(val);\r\n                },\r\n                errorMessage: 'You must agree to these terms.',\r\n            },\r\n            {\r\n                selector: '#gift-certificate-form input[name=\"agree2\"]',\r\n                validate: (cb) => {\r\n                    const val = $purchaseForm.find('input[name=\"agree2\"]').get(0).checked;\r\n\r\n                    cb(val);\r\n                },\r\n                errorMessage: 'You must agree to these terms.',\r\n            },\r\n        ]);\r\n\r\n        if ($certBalanceForm.length) {\r\n            const balanceVal = this.checkCertBalanceValidator($certBalanceForm);\r\n\r\n            $certBalanceForm.submit(() => {\r\n                balanceVal.performCheck();\r\n\r\n                if (!balanceVal.areAll('valid')) {\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n\r\n        $purchaseForm.submit((event) => {\r\n            purchaseValidator.performCheck();\r\n\r\n            if (!purchaseValidator.areAll('valid')) {\r\n                return event.preventDefault();\r\n            }\r\n        });\r\n\r\n        $('#gift-certificate-preview').click((event) => {\r\n            event.preventDefault();\r\n\r\n            purchaseValidator.performCheck();\r\n\r\n            if (!purchaseValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            const modal = defaultModal();\r\n            const previewUrl = `${$(event.currentTarget).data('preview-url')}&${$purchaseForm.serialize()}`;\r\n\r\n            modal.open();\r\n\r\n            api.getPage(previewUrl, {}, (err, content) => {\r\n                if (err) {\r\n                    return modal.updateContent(this.context.previewError);\r\n                }\r\n\r\n                modal.updateContent(content, { wrap: true });\r\n            });\r\n        });\r\n    }\r\n\r\n    checkCertBalanceValidator($balanceForm) {\r\n        const balanceValidator = nod({\r\n            submit: $balanceForm.find('input[type=\"submit\"]'),\r\n        });\r\n\r\n        balanceValidator.add({\r\n            selector: $balanceForm.find('input[name=\"giftcertificatecode\"]'),\r\n            validate(cb, val) {\r\n                cb(giftCertChecker(val));\r\n            },\r\n            errorMessage: 'You must enter a certificate code.',\r\n        });\r\n\r\n        return balanceValidator;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/gift-certificate.js"],"sourceRoot":""}